version: '3.7'

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    image: minio/minio:RELEASE.2021-06-07T21-40-51Z
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_REGION_NAME: ${MINIO_REGION_NAME:-us-east-1}
      MINIO_BROWSER: ${MINIO_BROWSER:-on}
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio2:
    image: minio/minio:RELEASE.2021-06-07T21-40-51Z
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_REGION_NAME: ${MINIO_REGION_NAME:-us-east-1}
      MINIO_BROWSER: ${MINIO_BROWSER:-on}
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio3:
    image: minio/minio:RELEASE.2021-06-07T21-40-51Z
    volumes:
      - data3-1:/data1
      - data3-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_REGION_NAME: ${MINIO_REGION_NAME:-us-east-1}
      MINIO_BROWSER: ${MINIO_BROWSER:-on}
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio4:
    image: minio/minio:RELEASE.2021-06-07T21-40-51Z
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_REGION_NAME: ${MINIO_REGION_NAME:-us-east-1}
      MINIO_BROWSER: ${MINIO_BROWSER:-on}
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  nginx:
    image: staticfloat/nginx-certbot
    volumes:
      - ./nginx/conf.d:/etc/nginx/user.conf.d:ro
      - letsencrypt:/etc/letsencrypt
    environment:
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
      ENVSUBST_VARS: FQDN
      FQDN: ${FQDN}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
    restart: always

  s3-bucket:
    image: minio/mc
    depends_on:
      - nginx
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio https://${FQDN} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc rm -r --force myminio/${MINIO_DEFAULT_BUCKET};
      /usr/bin/mc mb myminio/${MINIO_DEFAULT_BUCKET};
      /usr/bin/mc policy download myminio/${MINIO_DEFAULT_BUCKET};
      exit 0;
      "

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
  letsencrypt:
